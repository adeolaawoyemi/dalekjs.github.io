{
    "project": {
        "name": "grunt-dalek",
        "description": "Run browser tests with dalakjs",
        "version": "0.1.1",
        "url": "https://github.com/dalekjs/grunt-dalek"
    },
    "files": {
        "tasks/dalekjs.js": {
            "name": "tasks/dalekjs.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {},
    "classitems": [
        {
            "file": "tasks/dalekjs.js",
            "line": 24,
            "description": "Run browser tests with dalak\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```bash\nnpm install grunt-dalek --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```javascript\ngrunt.loadNpmTasks('grunt-dalek');\n```\n\n## The \"dalek\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `dalek` to the data object passed into `grunt.initConfig()`.\n\n```javascript\ngrunt.initConfig({\n  dalek: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.dalekfile\nType: `Boolean`\nDefault: `true`\n\nGrunt should load the config options from your Dalekfile\n\n#### options.browser\nType: `Array`\nDefault: `['phatnomjs']`\n\nThe browsers you would like to test\nNote: For other browsers than PhantomJS, you need to have the Dalek browser plugin installed.\n\n#### options.reporter\nType: `Array`\nDefault: `null`\n\nThe reporters you would like to invoke\nNote: For other reporters than the grunt console output, you need to have the corresponding Dalek reporter plugin installed.\n\n#### options.advanced\nType: `Object`\nDefault: `null`\n\nAll the options you else would define in your Dalekfile.\nThis overwrites the contents of your Dalekfile.\n\n## Examples\n\n### Configuration Example\n\nBasic example of a Grunt config containing the dalek task.\n\n```javascript\ngrunt.initConfig({\n  dalek: {\n    dist: {\n      src: ['test/example/test-github.js']\n    }\n  }\n\n});\n\n// Loads tasks located in the tasks directory. \ngrunt.loadTasks('tasks');\n\ngrunt.registerTask('default', ['dalek']);\n```\n\n### Multiple Files\n\nRunning dalekjs against multiple files.\n```javascript\ndalek: {\n  dist: {\n    src: ['test/example/test-dkd.js','test/example/test-github.js']\n  }\n}\n```\n\n### Specifying Options\n\n```javascript\ndalek: {\n    options: {\n      // invoke phantomjs, chrome & chrome canary\n      browser: ['phantomjs', 'chrome', 'chrome:canary'],\n      // generate an html & an jUnit report\n      reporter: ['html', 'junit'],\n      // don't load config from an Dalekfile\n      dalekfile: false,\n      // specify advanced options (that else would be in your Dalekfile)\n      advanced: {\n        // specify a port for chrome\n        browsers: [{\n          chrome: {\n            port: 4000\n          }\n        }]\n      }\n    }\n}\n```",
            "part": "Grunt",
            "api": "",
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: part",
            "line": " tasks/dalekjs.js:24"
        },
        {
            "message": "unknown tag: api",
            "line": " tasks/dalekjs.js:24"
        },
        {
            "message": "Missing item type\nRun browser tests with dalak\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```bash\nnpm install grunt-dalek --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```javascript\ngrunt.loadNpmTasks('grunt-dalek');\n```\n\n## The \"dalek\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `dalek` to the data object passed into `grunt.initConfig()`.\n\n```javascript\ngrunt.initConfig({\n  dalek: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.dalekfile\nType: `Boolean`\nDefault: `true`\n\nGrunt should load the config options from your Dalekfile\n\n#### options.browser\nType: `Array`\nDefault: `['phatnomjs']`\n\nThe browsers you would like to test\nNote: For other browsers than PhantomJS, you need to have the Dalek browser plugin installed.\n\n#### options.reporter\nType: `Array`\nDefault: `null`\n\nThe reporters you would like to invoke\nNote: For other reporters than the grunt console output, you need to have the corresponding Dalek reporter plugin installed.\n\n#### options.advanced\nType: `Object`\nDefault: `null`\n\nAll the options you else would define in your Dalekfile.\nThis overwrites the contents of your Dalekfile.\n\n## Examples\n\n### Configuration Example\n\nBasic example of a Grunt config containing the dalek task.\n\n```javascript\ngrunt.initConfig({\n  dalek: {\n    dist: {\n      src: ['test/example/test-github.js']\n    }\n  }\n\n});\n\n// Loads tasks located in the tasks directory. \ngrunt.loadTasks('tasks');\n\ngrunt.registerTask('default', ['dalek']);\n```\n\n### Multiple Files\n\nRunning dalekjs against multiple files.\n```javascript\ndalek: {\n  dist: {\n    src: ['test/example/test-dkd.js','test/example/test-github.js']\n  }\n}\n```\n\n### Specifying Options\n\n```javascript\ndalek: {\n    options: {\n      // invoke phantomjs, chrome & chrome canary\n      browser: ['phantomjs', 'chrome', 'chrome:canary'],\n      // generate an html & an jUnit report\n      reporter: ['html', 'junit'],\n      // don't load config from an Dalekfile\n      dalekfile: false,\n      // specify advanced options (that else would be in your Dalekfile)\n      advanced: {\n        // specify a port for chrome\n        browsers: [{\n          chrome: {\n            port: 4000\n          }\n        }]\n      }\n    }\n}\n```",
            "line": " tasks/dalekjs.js:24"
        }
    ]
}